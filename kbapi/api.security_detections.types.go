package kbapi

import (
	"encoding/json"

	"github.com/elastic/go-elasticsearch/v9/typedapi/types"
)

type SecurityDetectionsRule interface {
	GetType() string
	GetCommonFields() *SecurityDetectionsCommonRule
}

// Update the SecurityDetectionsCommonRule comment for ResponseActions
// SecurityDetectionsCommonRule defines common fields shared by all security detection rule types.
type SecurityDetectionsCommonRule struct {
	// Actions Array defining the automated actions (notifications) taken when alerts are generated.
	Actions []SecurityDetectionsRuleAction `json:"actions"`
	// AlertSuppression Defines alert suppression configuration.
	AlertSuppression *SecurityDetectionsAlertSuppression `json:"alert_suppression,omitempty"`
	// AliasPurpose Values are savedObjectConversion or savedObjectImport.
	AliasPurpose  *string `json:"alias_purpose,omitempty"`
	AliasTargetID *string `json:"alias_target_id,omitempty"`
	// Author The rule's author.
	Author []string `json:"author"`
	// BuildingBlockType Determines if the rule acts as a building block. If yes, the value must be `default`.
	// By default, building-block alerts are not displayed in the UI. These rules are used as a foundation for other rules that do generate alerts.
	// For more information, refer to [About building block rules](https://www.elastic.co/guide/en/security/current/building-block-rule.html).
	BuildingBlockType *string `json:"building_block_type,omitempty"`
	// CreatedAt is the timestamp when the rule was created
	// ReadOnly: This field is populated by Kibana
	CreatedAt string `json:"created_at"`
	// CreatedBy identifies the user who created the rule
	// ReadOnly: This field is populated by Kibana
	CreatedBy string `json:"created_by"`
	// Description The rule's description.
	Description string `json:"description"`
	// Enabled Determines whether the rule is enabled. Defaults to true.
	Enabled        bool                                  `json:"enabled"`
	ExceptionsList []SecurityDetectionsRuleExceptionList `json:"exceptions_list"`
	// ExecutionSummary Summary of the last execution of a rule.
	// This field is under development and its usage or schema may change
	// ReadOnly: This field is populated by Kibana
	ExecutionSummary *SecurityDetectionsRuleExecutionSummary `json:"execution_summary,omitempty"`
	// FalsePositives String array used to describe common reasons why the rule may issue false-positive alerts. Defaults to an empty array.
	FalsePositives []string `json:"false_positives"`
	// From Time from which data is analyzed each time the rule runs, using a date math range. For example, now-4200s means the rule analyzes data from 70 minutes before its start time. Defaults to now-6m (analyzes data from 6 minutes before the start time).
	From string `json:"from"`
	// ID A universally unique identifier
	ID string `json:"id"`
	// Immutable This field determines whether the rule is a prebuilt Elastic rule. It will be replaced with the `rule_source` field.
	// Deprecated: use RuleSource instead
	// ReadOnly: This field is populated by Kibana
	Immutable bool `json:"immutable"`
	// Interval Frequency of rule execution, using a date math range. For example, "1h" means the rule runs every hour. Defaults to 5m (5 minutes).
	Interval string `json:"interval"`
	// InvestigationFields Schema for fields relating to investigation fields. These are user defined fields we use to highlight
	// in various features in the UI such as alert details flyout and exceptions auto-population from alert.
	InvestigationFields *SecurityDetectionsInvestigationFields `json:"investigation_fields,omitempty"`
	// License The rule's license.
	License *string `json:"license,omitempty"`
	// MaxSignals Maximum number of alerts the rule can create during a single run (the rule's Max alerts per run [advanced setting](https://www.elastic.co/guide/en/security/current/rules-ui-create.html#rule-ui-advanced-params) value).
	// > info
	// > This setting can be superseded by the [Kibana configuration setting](https://www.elastic.co/guide/en/kibana/current/alert-action-settings-kb.html#alert-settings) `xpack.alerting.rules.run.alerts.max`, which determines the maximum alerts generated by any rule in the Kibana alerting framework. For example, if `xpack.alerting.rules.run.alerts.max` is set to 1000, the rule can generate no more than 1000 alerts even if `max_signals` is set higher.
	MaxSignals int `json:"max_signals"`
	// Meta Placeholder for metadata about the rule.
	// > info
	// > This field is overwritten when you save changes to the rule's settings.
	Meta *map[string]any `json:"meta,omitempty"`
	// Name A human-readable name for the rule.
	Name string `json:"name"`
	// Namespace Has no effect.
	Namespace *string `json:"namespace,omitempty"`
	// Note Notes to help investigate alerts produced by the rule.
	Note *string `json:"note,omitempty"`
	// OutputIndex (deprecated) Has no effect.
	// Deprecated:
	OutputIndex *string `json:"output_index,omitempty"`
	// Outcome Values are exactMatch, aliasMatch, or conflict.
	Outcome *string `json:"outcome,omitempty"`
	// References Array containing notes about or references to relevant information about the rule. Defaults to an empty array.
	References          []string                               `json:"references"`
	RelatedIntegrations []SecurityDetectionsRelatedIntegration `json:"related_integrations"`
	RequiredFields      []SecurityDetectionsRequiredField      `json:"required_fields"`
	// ResponseActions defines the automated response actions to be taken when alerts are generated.
	// Use the following methods to work with response actions:
	// - AddOsqueryResponseAction(): Add an osquery response action
	// - AddEndpointResponseActionWithDefaultParams(): Add an endpoint action with default params
	// - AddEndpointResponseActionWithProcessesParams(): Add an endpoint action with processes params
	// - GetResponseActions(): Get all response actions
	// - GetOsqueryResponseActions(): Get all osquery actions
	// - GetEndpointResponseActions(): Get all endpoint actions
	// - ClearResponseActions(): Remove all response actions
	// - RemoveResponseActionByIndex(): Remove a specific response action
	ResponseActions *[]json.RawMessage `json:"response_actions,omitempty"`
	// Revision The rule's revision number.
	// ReadOnly: This field is populated by Kibana
	// It represents the version of rule's object in Kibana.
	// It is set to `0` when the rule is installed or created and then gets incremented on each update.
	// Not all updates to any rule fields will increment the revision.
	// Only those fields that are considered static `rule parameters` can trigger revision increments.
	// For example, an update to a rule's query or index fields will increment the rule's revision by `1`.
	// However, changes to dynamic or technical fields like enabled or execution_summary will not cause revision increments.
	Revision int `json:"revision"`
	// RiskScore A numerical representation of the alert's severity from 0 to 100, where:
	// * `0` - `21` represents low severity
	// * `22` - `47` represents medium severity
	// * `48` - `73` represents high severity
	// * `74` - `100` represents critical severity
	RiskScore int `json:"risk_score"`
	// RiskScoreMapping Overrides generated alerts' risk_score with a value from the source event
	RiskScoreMapping []SecurityDetectionsRiskScoreMapping `json:"risk_score_mapping"`
	// RuleID A stable unique identifier for the rule object. It can be assigned during rule creation. It can be any string, but often is a UUID. It should be unique not only within a given Kibana space, but also across spaces and Elastic environments. The same prebuilt Elastic rule, when installed in two different Kibana spaces or two different Elastic environments, will have the same `rule_id`s.
	RuleID string `json:"rule_id"`
	// RuleNameOverride Sets which field in the source event is used to populate the alert's `signal.rule.name` value (in the UI, this value is displayed on the Rules page in the Rule column). When unspecified, the rule's `name` value is used. The source field must be a string data type.
	RuleNameOverride *string `json:"rule_name_override,omitempty"`
	// RuleSource Discriminated union that determines whether the rule is internally sourced
	// (created within the Kibana app) or has an external source, such as the Elastic Prebuilt rules repo.
	// Use the following methods to work with rule source:
	// - GetRuleSourceType(): Get the type of rule source
	// - GetInternalRuleSource(): Get internal rule source details
	// - GetExternalRuleSource(): Get external rule source details
	// - GetRuleSource(): Get rule source as interface{}
	// - IsInternalRule(): Check if rule is internal
	// - IsExternalRule(): Check if rule is external
	// - IsCustomizedExternalRule(): Check if rule is a customized external rule
	// ReadOnly: This field is populated by Kibana
	RuleSource json.RawMessage `json:"rule_source"`
	// Setup Populates the rule's setup guide with instructions on rule prerequisites such as required integrations, configuration steps, and anything else needed for the rule to work correctly.
	Setup string `json:"setup"`
	// Severity Severity level of alerts produced by the rule, which must be one of the following:
	// * `low`: Alerts that are of interest but generally not considered to be security incidents
	// * `medium`: Alerts that require investigation
	// * `high`: Alerts that require immediate investigation
	// * `critical`: Alerts that indicate it is highly likely a security incident has occurred
	Severity string `json:"severity"`
	// SeverityMapping Overrides generated alerts' severity with values from the source event
	SeverityMapping []SecurityDetectionsSeverityMapping `json:"severity_mapping"`
	// Tags String array containing words and phrases to help categorize, filter, and search rules. Defaults to an empty array.
	Tags   []string                   `json:"tags"`
	Threat []SecurityDetectionsThreat `json:"threat"`
	// Throttle Defines how often rule actions are taken.
	Throttle *string `json:"throttle,omitempty"`
	// TimelineID Timeline template ID
	TimelineID *string `json:"timeline_id,omitempty"`
	// TimelineTitle Timeline template title
	TimelineTitle *string `json:"timeline_title,omitempty"`
	// TimestampOverride Sets the time field used to query indices. When unspecified, rules query the `@timestamp` field. The source field must be an Elasticsearch date data type.
	TimestampOverride *string `json:"timestamp_override,omitempty"`
	// TimestampOverrideFallbackDisabled Disables the fallback to the event's @timestamp field
	TimestampOverrideFallbackDisabled *bool  `json:"timestamp_override_fallback_disabled,omitempty"`
	To                                string `json:"to"`
	// Type Rule type
	Type string `json:"type"`
	// UpdatedAt is the timestamp when the rule was last updated.
	// ReadOnly: This field is populated by Kibana
	UpdatedAt string `json:"updated_at"`
	// UpdatedBy identifies the user who last updated the rule.
	// ReadOnly: This field is populated by Kibana
	UpdatedBy string `json:"updated_by"`
	// Version The rule's version number.
	// - For prebuilt rules it represents the version of the rule's content in the source [detection-rules](https://github.com/elastic/detection-rules) repository (and the corresponding `security_detection_engine` Fleet package that is used for distributing prebuilt rules).
	// - For custom rules it is set to `1` when the rule is created.
	// - It is not incremented on each update. Compare this to the `revision` field.
	Version int `json:"version"`
}

func (r *SecurityDetectionsESQLRule) GetType() string {
	return "esql"
}

func (r *SecurityDetectionsESQLRule) GetCommonFields() *SecurityDetectionsCommonRule {
	return &r.SecurityDetectionsCommonRule
}

type SecurityDetectionsESQLRule struct {
	SecurityDetectionsCommonRule
	// Language Value is esql.
	Language string `json:"language"`
	// Query [Query](https://www.elastic.co/guide/en/kibana/8.17/search.html) used by the rule to create alerts.
	// - For indicator match rules, only the query’s results are used to determine whether an alert is generated.
	// - ES|QL rules have additional query requirements. Refer to Create ES|QL rules for more information.
	Query string `json:"query"`
}

func (r *SecurityDetectionsNewTermsRule) GetType() string {
	return "new_terms"
}

func (r *SecurityDetectionsNewTermsRule) GetCommonFields() *SecurityDetectionsCommonRule {
	return &r.SecurityDetectionsCommonRule
}

type SecurityDetectionsNewTermsRule struct {
	SecurityDetectionsCommonRule
	DataViewID *string `json:"data_view_id,omitempty"`
	// Filters The query and filter context array used to define the conditions for when alerts are created from events.
	// Defaults to an empty array.
	Filters *[]any `json:"filters,omitempty"`
	// HistoryWindowStart Start date to use when checking if a term has been seen before.
	// Supports relative dates – for example, now-30d will search the last 30 days of data when checking if a term is new. We do not recommend using absolute dates, which can cause issues with rule performance due to querying increasing amounts of data over time.
	HistoryWindowStart string `json:"history_window_start"`
	// Index Indices on which the rule functions. Defaults to the Security Solution indices defined on the Kibana Advanced Settings page (Kibana → Stack Management → Advanced Settings → `securitySolution:defaultIndex`).
	Index *[]string `json:"index,omitempty"`
	// Language Values are kuery or lucene.
	Language string `json:"language"`
	// NewTermsFields Fields to monitor for new values.
	NewTermsFields []string `json:"new_terms_fields"`
	// Query [Query](https://www.elastic.co/guide/en/kibana/8.17/search.html) used by the rule to create alerts.
	// - For indicator match rules, only the query’s results are used to determine whether an alert is generated.
	Query string `json:"query"`
}

func (r *SecurityDetectionsMachineLearningRule) GetType() string {
	return "machine_learning"
}

func (r *SecurityDetectionsMachineLearningRule) GetCommonFields() *SecurityDetectionsCommonRule {
	return &r.SecurityDetectionsCommonRule
}

// SecurityDetectionsMachineLearningRule represents a Machine Learning rule response.
//
// The MachineLearningJobID field can be either a string or []string.
//
// Available methods:
// - GetMachineLearningJobIDString(): Get MachineLearningJobID as a string
// - GetMachineLearningJobIDSlice(): Get MachineLearningJobID as a string slice
// - SetMachineLearningJobIDString(value): Set MachineLearningJobID to a string value
// - SetMachineLearningJobIDSlice(values): Set MachineLearningJobID to a string slice
//
// Example:
//
// rule := &SecurityDetectionsMachineLearningRule{}
// rule.SetMachineLearningJobIDString("job_id_1") // For single job ID
// or
// rule.SetMachineLearningJobIDSlice([]string{"job_id_1", "job_id_2"}) // For multiple job IDs
type SecurityDetectionsMachineLearningRule struct {
	SecurityDetectionsCommonRule
	// AnomalyThreshold Anomaly score threshold above which the rule creates an alert. Valid values are from 0 to 100.
	AnomalyThreshold int `json:"anomaly_threshold"`
	// MachineLearningJobID Machine learning job ID(s) the rule monitors for anomaly scores.
	// Can be either a string or []string. Use the Get/Set methods to access or modify this field.
	MachineLearningJobID json.RawMessage `json:"machine_learning_job_id"`
}

func (r *SecurityDetectionsThreatMatchRule) GetType() string {
	return "threat_match"
}

func (r *SecurityDetectionsThreatMatchRule) GetCommonFields() *SecurityDetectionsCommonRule {
	return &r.SecurityDetectionsCommonRule
}

type SecurityDetectionsThreatMatchRule struct {
	SecurityDetectionsCommonRule
	ConcurrentSearches *int    `json:"concurrent_searches,omitempty"`
	DataViewID         *string `json:"data_view_id,omitempty"`
	// Filters The query and filter context array used to define the conditions for when alerts are created from events. Defaults to an empty array.
	Filters *[]any `json:"filters,omitempty"`
	// Index Indices on which the rule functions. Defaults to the Security Solution indices defined on the Kibana Advanced Settings page (Kibana → Stack Management → Advanced Settings → `securitySolution:defaultIndex`).
	Index          *[]string `json:"index,omitempty"`
	ItemsPerSearch *int      `json:"items_per_search,omitempty"`
	// Language Values are kuery or lucene.
	Language string `json:"language"`
	// Query [Query](https://www.elastic.co/guide/en/kibana/8.17/search.html) used by the rule to create alerts.
	// - For indicator match rules, only the query’s results are used to determine whether an alert is generated.
	Query string `json:"query"`
	// SavedID Kibana [saved search](https://www.elastic.co/guide/en/kibana/current/save-open-search.html) used by the rule to create alerts.
	SavedID       *string `json:"saved_id,omitempty"`
	ThreatFilters *[]any  `json:"threat_filters,omitempty"`
	// ThreatIndex Elasticsearch indices used to check which field values generate alerts.
	ThreatIndex []string `json:"threat_index"`
	// ThreatIndicatorPath Defines the path to the threat indicator in the indicator documents (optional)
	ThreatIndicatorPath *string `json:"threat_indicator_path,omitempty"`
	// ThreatLanguage Values are kuery or lucene.
	ThreatLanguage *string `json:"threat_language,omitempty"`
	// ThreatMapping Array of entries objects that define mappings between the source event fields and the values in the Elasticsearch threat index. Each entries object must contain these fields:
	// - field: field from the event indices on which the rule runs
	// - type: must be mapping
	// - value: field from the Elasticsearch threat index
	// You can use Boolean and and or logic to define the conditions for when matching fields and values generate alerts. Sibling entries objects are evaluated using or logic, whereas multiple entries in a single entries object use and logic. See Example of Threat Match rule which uses both `and` and `or` logic.
	ThreatMapping []SecurityDetectionsThreatMapping `json:"threat_mapping"`
	// ThreatQuery Query used to determine which fields in the Elasticsearch index are used for generating alerts.
	ThreatQuery string `json:"threat_query"`
}

func (r *SecurityDetectionsThresholdRule) GetType() string {
	return "threshold"
}

func (r *SecurityDetectionsThresholdRule) GetCommonFields() *SecurityDetectionsCommonRule {
	return &r.SecurityDetectionsCommonRule
}

type SecurityDetectionsThresholdRule struct {
	SecurityDetectionsCommonRule
	DataViewID *string `json:"data_view_id,omitempty"`
	// Filters The query and filter context array used to define the conditions for when alerts are created from events. Defaults to an empty array.
	Filters *[]any `json:"filters,omitempty"`
	// Index Indices on which the rule functions. Defaults to the Security Solution indices defined on the Kibana Advanced Settings page (Kibana → Stack Management → Advanced Settings → `securitySolution:defaultIndex`).
	Index *[]string `json:"index,omitempty"`
	// Language Values are kuery or lucene.
	Language string `json:"language"`
	// Query [Query](https://www.elastic.co/guide/en/kibana/8.17/search.html) used by the rule to create alerts.
	// - For indicator match rules, only the query’s results are used to determine whether an alert is generated.
	Query string `json:"query"`
	// SavedID Kibana [saved search](https://www.elastic.co/guide/en/kibana/current/save-open-search.html) used by the rule to create alerts.
	SavedID   *string                     `json:"saved_id,omitempty"`
	Threshold SecurityDetectionsThreshold `json:"threshold"`
}

func (r *SecurityDetectionsSavedQueryRule) GetType() string {
	return "saved_query"
}

func (r *SecurityDetectionsSavedQueryRule) GetCommonFields() *SecurityDetectionsCommonRule {
	return &r.SecurityDetectionsCommonRule
}

type SecurityDetectionsSavedQueryRule struct {
	SecurityDetectionsCommonRule
	DataViewID *string `json:"data_view_id,omitempty"`
	// Filters The query and filter context array used to define the conditions for when alerts are created from events. Defaults to an empty array.
	Filters *[]any `json:"filters,omitempty"`
	// Index Indices on which the rule functions. Defaults to the Security Solution indices defined on the Kibana Advanced Settings page (Kibana → Stack Management → Advanced Settings → `securitySolution:defaultIndex`).
	Index *[]string `json:"index,omitempty"`
	// Language Values are kuery or lucene.
	Language string `json:"language"`
	// Query [Query](https://www.elastic.co/guide/en/kibana/8.17/search.html) used by the rule to create alerts.
	// - For indicator match rules, only the query’s results are used to determine whether an alert is generated.
	Query *string `json:"query,omitempty"`
	// SavedID Kibana [saved search](https://www.elastic.co/guide/en/kibana/current/save-open-search.html) used by the rule to create alerts.
	SavedID string `json:"saved_id"`
}

func (r *SecurityDetectionsQueryRule) GetType() string {
	return "query"
}

func (r *SecurityDetectionsQueryRule) GetCommonFields() *SecurityDetectionsCommonRule {
	return &r.SecurityDetectionsCommonRule
}

type SecurityDetectionsQueryRule struct {
	SecurityDetectionsCommonRule
	DataViewID *string `json:"data_view_id,omitempty"`
	// Filters The query and filter context array used to define the conditions for when alerts are created from events. Defaults to an empty array.
	Filters *[]any `json:"filters,omitempty"`
	// Index Indices on which the rule functions. Defaults to the Security Solution indices defined on the Kibana Advanced Settings page (Kibana → Stack Management → Advanced Settings → `securitySolution:defaultIndex`).
	Index    *[]string `json:"index,omitempty"`
	Language string    `json:"language"`
	// Query [Query](https://www.elastic.co/guide/en/kibana/8.17/search.html) used by the rule to create alerts.
	// - For indicator match rules, only the query’s results are used to determine whether an alert is generated.
	Query string `json:"query"`
	// SavedID Kibana [saved search](https://www.elastic.co/guide/en/kibana/current/save-open-search.html) used by the rule to create alerts.
	SavedID *string `json:"saved_id,omitempty"`
}

func (r *SecurityDetectionsEQLRule) GetType() string {
	return "eql"
}

func (r *SecurityDetectionsEQLRule) GetCommonFields() *SecurityDetectionsCommonRule {
	return &r.SecurityDetectionsCommonRule
}

type SecurityDetectionsEQLRule struct {
	SecurityDetectionsCommonRule
	DataViewID            *string `json:"data_view_id,omitempty"`
	EventCategoryOverride *string `json:"event_category_override,omitempty"`
	// Filters The query and filter context array used to define the conditions for when alerts are created from events.
	// Defaults to an empty array.
	Filters *[]any `json:"filters,omitempty"`
	// Index Indices on which the rule functions.
	// Defaults to the Security Solution indices defined on the Kibana Advanced Settings page (Kibana → Stack Management → Advanced Settings → `securitySolution:defaultIndex`).
	Index *[]string `json:"index,omitempty"`
	// Language Value is eql
	Language string `json:"language"`
	// Query [Query](https://www.elastic.co/guide/en/kibana/8.17/search.html) used by the rule to create alerts.
	//
	// - For indicator match rules, only the query’s results are used to determine whether an alert is generated.
	// - ES|QL rules have additional query requirements. Refer to [Create ES|QL](https://www.elastic.co/guide/en/security/current/rules-ui-create.html#create-esql-rule) rules for more information.
	Query string `json:"query"`
	// TiebreakerField Sets a secondary field for sorting events
	TiebreakerField *string `json:"tiebreaker_field,omitempty"`
	// Specifies the name of the event timestamp field used for sorting a sequence of events.
	// Not to be confused with timestamp_override, which specifies the more general field used for querying events within a range.
	// Defaults to the @timestamp ECS field.
	TimestampField *string `json:"timestamp_field,omitempty"`
}

// Action type constants
const (
	ActionTypeSlack          = ".slack"
	ActionTypeSlackAPI       = ".slack_api"
	ActionTypeEmail          = ".email"
	ActionTypeIndex          = ".index"
	ActionTypePagerDuty      = ".pagerduty"
	ActionTypeSwimlane       = ".swimlane"
	ActionTypeWebhook        = ".webhook"
	ActionTypeServiceNow     = ".servicenow"
	ActionTypeServiceNowITOM = ".servicenow-itom"
	ActionTypeServiceNowSIR  = ".servicenow-sir"
	ActionTypeJira           = ".jira"
	ActionTypeResilient      = ".resilient"
	ActionTypeOpsGenie       = ".opsgenie"
	ActionTypeTeams          = ".teams"
	ActionTypeTorq           = ".torq"
	ActionTypeTines          = ".tines"
	ActionTypeD3Security     = ".d3security"
)

// PagerDuty severity levels
const (
	PagerDutySeverityCritical = "Critical"
	PagerDutySeverityError    = "Error"
	PagerDutySeverityWarning  = "Warning"
	PagerDutySeverityInfo     = "Info"
)

// PagerDuty event actions
const (
	PagerDutyEventActionTrigger     = "trigger"
	PagerDutyEventActionResolve     = "resolve"
	PagerDutyEventActionAcknowledge = "acknowledge"
)

// SecurityDetectionsRuleAction defines an automated action that will be triggered when a rule generates an alert.
//
// The Params field contains connector-specific parameters for the action. Use the specialized methods
// to get and set these parameters based on the action type:
//
// - For Slack actions (ActionTypeSlack, ActionTypeSlackAPI):
//   - GetSlackParams(): Retrieve Slack connector parameters
//   - SetSlackParams(message): Set Slack connector parameters
//
// - For Email actions (ActionTypeEmail):
//   - GetEmailParams(): Retrieve Email connector parameters
//   - SetEmailParams(to, cc, bcc, subject, message): Set Email connector parameters
//
// - For Webhook actions (ActionTypeWebhook):
//   - GetWebhookParams(): Retrieve Webhook connector parameters
//   - SetWebhookParams(body): Set Webhook connector parameters
//
// - For PagerDuty actions (ActionTypePagerDuty):
//   - GetPagerDutyParams(): Retrieve PagerDuty connector parameters
//   - SetPagerDutyParams(severity, eventAction, ...): Set PagerDuty connector parameters
type SecurityDetectionsRuleAction struct {
	// ActionTypeID The action type used for sending notifications, can be:
	//   - `.slack`
	//   - `.slack_api`
	//   - `.email`
	//   - `.index`
	//   - `.pagerduty`
	//   - `.swimlane`
	//   - `.webhook`
	//   - `.servicenow`
	//   - `.servicenow-itom`
	//   - `.servicenow-sir`
	//   - `.jira`
	//   - `.resilient`
	//   - `.opsgenie`
	//   - `.teams`
	//   - `.torq`
	//   - `.tines`
	//   - `.d3security`
	ActionTypeID string `json:"action_type_id"`

	// AlertsFilter Object containing an action’s conditional filters.
	// - `timeframe` (object, optional): Object containing the time frame for when this action can be run.
	//     - `days` (array of integers, required): List of days of the week on which this action will be run. Days of the week are expressed as numbers between `1-7`, where `1` is Monday and `7` is Sunday. To select all days of the week, enter an empty array.
	//     - `hours` (object, required): The hours of the day during which this action will run. Hours of the day are expressed as two strings in the format `hh:mm` in `24` hour time. A start of `00:00` and an end of `24:00` means the action can run all day.
	//         - start (string, required): Start time in `hh:mm` format.
	//         - end (string, required): End time in `hh:mm` format.
	//     - `timezone` (string, required): An ISO timezone name, such as `Europe/Madrid` or `America/New_York`. Specific offsets such as `UTC` or `UTC+1` will also work, but lack built-in DST.
	// - `query` (object, optional): Object containing a query filter which gets applied to an action and determines whether the action should run.
	//     - `kql` (string, required): A KQL string.
	//     - `filters` (array of objects, required): Array of filter objects, as defined in the `kbn-es-query` package.
	AlertsFilter *SecurityDetectionsRuleActionAlertsFilter `json:"alerts_filter,omitempty"`

	// Frequency The action frequency defines when the action runs (for example, only on rule execution or at specific time intervals).
	Frequency *SecurityDetectionsRuleActionFrequency `json:"frequency,omitempty"`

	// Group Optionally groups actions by use cases. Use `default` for alert notifications.
	Group *string `json:"group,omitempty"`

	// ID The connector ID.
	ID string `json:"id"`

	// Params Object containing the connector-specific parameters.
	// Use the appropriate Get/Set methods to access this field based on the action type:
	// - GetSlackParams()/SetSlackParams() for Slack connectors
	// - GetEmailParams()/SetEmailParams() for Email connectors
	// - GetWebhookParams()/SetWebhookParams() for Webhook connectors
	// - GetPagerDutyParams()/SetPagerDutyParams() for PagerDuty connectors
	Params json.RawMessage `json:"params"`

	// UUID A string that does not contain only whitespace characters
	UUID *string `json:"uuid,omitempty"`
}

type SecurityDetectionsRuleActionAlertsFilter struct {
	// Timeframe defines when this action can be run
	Timeframe *Timeframe `json:"timeframe,omitempty"`

	// Query contains filter conditions that determine whether the action should run
	Query *Query `json:"query,omitempty"`
}

type SecurityDetectionsRuleActionFrequency struct {
	// NotifyWhen Defines how often rules run actions.
	NotifyWhen string `json:"notifyWhen"`
	// Summary Action summary indicates whether we will send a summary notification about all the generate alerts or notification per individual alert
	Summary bool `json:"summary"`
	// Throttle Defines how often rule actions are taken.
	// Values are no_actions or rule.
	Throttle string `json:"throttle"`
}

// SlackConnector represents the fields for a Slack notification connector
type SecurityDetectionsSlackConnectorParams struct {
	// Message is the notification message to be sent
	Message string `json:"message"`
}

// EmailConnector represents the fields for an Email notification connector
type SecurityDetectionsEmailConnectorParams struct {
	// To contains email addresses of primary recipients
	To string `json:"to,omitempty"`
	// Cc contains email addresses of carbon copy recipients
	Cc string `json:"cc,omitempty"`
	// Bcc contains email addresses of blind carbon copy recipients
	Bcc string `json:"bcc,omitempty"`
	// Subject is the optional email subject line
	Subject string `json:"subject,omitempty"`
	// Message is the required email body text
	Message string `json:"message"`
}

// WebhookConnector represents the fields for a Webhook notification connector
type SecurityDetectionsWebhookConnectorParams struct {
	// Body is the required JSON payload
	Body string `json:"body"`
}

// PagerDutyConnector represents the fields for a PagerDuty notification connector
type SecurityDetectionsPagerDutyConnectorParams struct {
	// Severity indicates the severity of the alert (Critical, Error, Warning, or Info)
	Severity string `json:"severity"`
	// EventAction specifies the event action type (trigger, resolve, or acknowledge)
	EventAction string `json:"eventAction"`
	// DedupKey groups alert notifications with the same PagerDuty alert
	DedupKey string `json:"dedupKey,omitempty"`
	// Timestamp in ISO-8601 format
	Timestamp string `json:"timestamp,omitempty"`
	// Component indicates the source machine component responsible for the event
	Component string `json:"component,omitempty"`
	// Group enables logical grouping of service components
	Group string `json:"group,omitempty"`
	// Source indicates the affected system (defaults to Kibana saved object ID)
	Source string `json:"source,omitempty"`
	// Summary provides a summary of the event (max 1024 characters)
	Summary string `json:"summary,omitempty"`
	// Class indicates the class/type of the event
	Class string `json:"class,omitempty"`
}

type SecurityDetectionsRuleExceptionList struct {
	// ID ID of the exception container
	ID string `json:"id"`

	// ListID List ID of the exception container
	ListID string `json:"list_id"`

	// NamespaceType Determines the exceptions validity in rule's Kibana space
	NamespaceType string `json:"namespace_type"`

	// Type The exception type
	// Values are detection, rule_default, endpoint, endpoint_trusted_apps, endpoint_events,
	// endpoint_host_isolation_exceptions, or endpoint_blocklists.
	Type string `json:"type"`
}

type SecurityDetectionsInvestigationFields struct {
	FieldNames []string `json:"field_names"`
}

type SecurityDetectionsRelatedIntegration struct {
	// Integration A string that does not contain only whitespace characters
	Integration *string `json:"integration,omitempty"`
	// Package A string that does not contain only whitespace characters
	Package string `json:"package"`
	// Version A string that does not contain only whitespace characters
	Version string `json:"version"`
}

// Almost all types of Security rules check source event documents for a match to some kind of
// query or filter. If a document has certain field with certain values, then it's a match and
// the rule will generate an alert.
//
// Required field is an event field that must be present in the source indices of a given rule.
//
// @example
//
//	const standardEcsField: RequiredField = {
//	  name: 'event.action',
//	  type: 'keyword',
//	  ecs: true,
//	};
//
// @example
//
//	const nonEcsField: RequiredField = {
//	  name: 'winlog.event_data.AttributeLDAPDisplayName',
//	  type: 'keyword',
//	  ecs: false,
//	};
type SecurityDetectionsRequiredField struct {
	// ECS Indicates whether the field is ECS-compliant. This property is only present in responses.
	// Its value is computed based on field’s name and type.
	ECS bool `json:"ecs"`
	// Name Name of an Elasticsearch field
	Name string `json:"name"`
	// Type Type of the Elasticsearch field
	Type string `json:"type"`
}

const (
	ActionTypeOsquery  = ".osquery"
	ActionTypeEndpoint = ".endpoint"
)

type SecurityDetectionsOSqueryResponseAction struct {
	// ActionTypeID Value is .osquery.
	ActionTypeID string                          `json:"action_type_id"`
	Params       SecurityDetectionsOSqueryParams `json:"params"`
}

type SecurityDetectionsOSqueryParams struct {
	// ECSMapping Map Osquery results columns or static values to Elastic Common Schema (ECS) fields. Example: "ecs_mapping": {"process.pid": {"field": "pid"}}
	ECSMapping *SecurityDetectionsECSMapping `json:"ecs_mapping,omitempty"`
	// PackID To specify a query pack, use the packId field. Example: "packId": "processes_elastic"
	PackID  *string                           `json:"pack_id,omitempty"`
	Queries *[]SecurityDetectionsOSqueryQuery `json:"queries,omitempty"`
	// Query To run a single query, use the query field and enter a SQL query. Example: "query": "SELECT * FROM processes;"
	Query *string `json:"query,omitempty"`
	// SavedQueryID To run a saved query, use the saved_query_id field and specify the saved query ID. Example: "saved_query_id": "processes_elastic"
	SavedQueryID *string `json:"saved_query_id,omitempty"`
	// Timeout A timeout period, in seconds, after which the query will stop running. Overwriting the default timeout allows you to support queries that require more time to complete. The default and minimum supported value is 60. The maximum supported value is 900. Example: "timeout": 120.
	Timeout *float32 `json:"timeout,omitempty"`
}

// SecurityDetectionsAPIEcsMapping Map Osquery results columns or static values to Elastic Common Schema (ECS) fields.
// The Value field can be either a string or []string.
// Available methods:
// - GetStringValue(ecsField): Get a string value
// - GetStringSliceValue(ecsField): Get a string slice value
// - SetStringValue(ecsField, value): Set a string value
// - SetStringSliceValue(ecsField, values): Set a string slice value
// - NewECSMapping(): Create a new empty mapping
// Example:
// mapping := NewECSMapping()
// mapping.SetStringValue("process.name", "bash")
// mapping.SetStringSliceValue("process.args", []string{"-c", "echo"})
type SecurityDetectionsECSMapping map[string]struct {
	Field *string          `json:"field,omitempty"`
	Value *json.RawMessage `json:"value,omitempty"`
}

type SecurityDetectionsOSqueryQuery struct {
	// ECSMapping Map Osquery results columns or static values to Elastic Common Schema (ECS) fields. Example: "ecs_mapping": {"process.pid": {"field": "pid"}}
	ECSMapping *SecurityDetectionsECSMapping `json:"ecs_mapping,omitempty"`

	ID       string  `json:"id"`
	Platform *string `json:"platform,omitempty"`

	// Query Query to run
	Query    string `json:"query"`
	Removed  *bool  `json:"removed,omitempty"`
	Snapshot *bool  `json:"snapshot,omitempty"`

	// Version Query version
	Version *string `json:"version,omitempty"`
}

// SecurityDetectionsEndpointResponseAction defines an Endpoint response action.
// Use GetDefaultParams() or GetProcessesParams() to extract the appropriate parameters,
// and SetDefaultParams() or SetProcessesParams() to set the parameters.
type SecurityDetectionsEndpointResponseAction struct {
	ActionTypeId string `json:"action_type_id"`
	// Params can be either SecurityDetectionsAPIEndpointResponseActionDefaultParams or
	// SecurityDetectionsAPIEndpointResponseActionProcessesParams
	Params json.RawMessage `json:"params"`
}

type SecurityDetectionsAPIEndpointResponseActionDefaultParams struct {
	// Command Value is isolate
	Command string  `json:"command"`
	Comment *string `json:"comment,omitempty"`
}

type SecurityDetectionsAPIEndpointResponseActionProcessesParams struct {
	// Command To run an endpoint response action, specify a value for the command field. Example: "command": "isolate"
	Command string `json:"command"`
	// Comment Add a note that explains or describes the action. You can find your comment in the response actions history log. Example: "comment": "Check processes"
	Comment *string `json:"comment,omitempty"`
	Config  struct {
		// Field Field to use instead of process.pid
		Field string `json:"field"`

		// Overwrite Whether to overwrite field with process.pid
		Overwrite *bool `json:"overwrite,omitempty"`
	} `json:"config"`
}

type SecurityDetectionsRiskScoreMapping struct {
	// Field Source event field used to override the default `risk_score`.
	Field    string `json:"field"`
	Operator string `json:"operator"`

	// RiskScore A numerical representation of the alert's severity from 0 to 100, where:
	// * `0` - `21` represents low severity
	// * `22` - `47` represents medium severity
	// * `48` - `73` represents high severity
	// * `74` - `100` represents critical severity
	RiskScore *int   `json:"risk_score,omitempty"`
	Value     string `json:"value"`
}

type SecurityDetectionsSeverityMapping struct {
	// Field Source event field used to override the default `severity`.
	Field    string `json:"field"`
	Operator string `json:"operator"`
	// Severity Severity level of alerts produced by the rule, which must be one of the following:
	// * `low`: Alerts that are of interest but generally not considered to be security incidents
	// * `medium`: Alerts that require investigation
	// * `high`: Alerts that require immediate investigation
	// * `critical`: Alerts that indicate it is highly likely a security incident has occurred
	Severity string `json:"severity"`
	Value    string `json:"value"`
}

// SecurityDetectionsAPIThreat > info
// > Currently, only threats described using the MITRE ATT&CK&trade; framework are supported.
type SecurityDetectionsThreat struct {
	// Framework Relevant attack framework
	Framework string `json:"framework"`

	// Tactic Object containing information on the attack type
	Tactic SecurityDetectionsThreatTactic `json:"tactic"`

	// Technique Array containing information on the attack techniques (optional)
	Technique *[]SecurityDetectionsThreatTechnique `json:"technique,omitempty"`
}

type SecurityDetectionsThreatTactic struct {
	// ID Tactic ID
	ID string `json:"id"`

	// Name Tactic name
	Name string `json:"name"`

	// Reference Tactic reference
	Reference string `json:"reference"`
}

type SecurityDetectionsThreatTechnique struct {
	// ID Technique ID
	ID string `json:"id"`
	// Name Technique name
	Name string `json:"name"`
	// Reference Technique reference
	Reference string `json:"reference"`
	// Subtechnique Array containing more specific information on the attack technique.
	Subtechnique *[]SecurityDetectionsThreatSubtechnique `json:"subtechnique,omitempty"`
}

type SecurityDetectionsThreatSubtechnique struct {
	// ID Subtechnique ID
	ID string `json:"id"`
	// Name Subtechnique name
	Name string `json:"name"`
	// Reference Subtechnique reference
	Reference string `json:"reference"`
}

// SecurityDetectionsAPIRuleExecutionSummary Summary of the last execution of a rule.
// > info
// > This field is under development and its usage or schema may change
type SecurityDetectionsRuleExecutionSummary struct {
	LastExecution SecurityDetectionsRuleLastExecution `json:"last_execution"`
}

type SecurityDetectionsRuleLastExecution struct {
	// Date Date of the last execution
	Date    string                                 `json:"date"`
	Message string                                 `json:"message"`
	Metrics SecurityDetectionsRuleExecutionMetrics `json:"metrics"`

	// Status Custom execution status of Security rules that is different from the status used in the Alerting Framework. We merge our custom status with the Framework's status to determine the resulting status of a rule.
	// - going to run - @deprecated Replaced by the 'running' status but left for backwards compatibility with rule execution events already written to Event Log in the prior versions of Kibana. Don't use when writing rule status changes.
	// - running - Rule execution started but not reached any intermediate or final status.
	// - partial failure - Rule can partially fail for various reasons either in the middle of an execution (in this case we update its status right away) or in the end of it. So currently this status can be both intermediate and final at the same time. A typical reason for a partial failure: not all the indices that the rule searches over actually exist.
	// - failed - Rule failed to execute due to unhandled exception or a reason defined in the business logic of its executor function.
	// - succeeded - Rule executed successfully without any issues. Note: this status is just an indication of a rule's "health". The rule might or might not generate any alerts despite of it.
	Status      string `json:"status"`
	StatusOrder int    `json:"status_order"`
}

type SecurityDetectionsRuleExecutionMetrics struct {
	// ExecutionGapDurationS Duration in seconds of execution gap
	ExecutionGapDurationS *int `json:"execution_gap_duration_s,omitempty"`
	// GapRange Range of the execution gap
	GapRange *struct {
		// Gte Start date of the execution gap
		GTE string `json:"gte"`
		// Lte End date of the execution gap
		LTE string `json:"lte"`
	} `json:"gap_range,omitempty"`
	// TotalEnrichmentDurationMs Total time spent enriching documents during current rule execution cycle
	TotalEnrichmentDurationMs *int `json:"total_enrichment_duration_ms,omitempty"`
	// TotalIndexingDurationMs Total time spent indexing documents during current rule execution cycle
	TotalIndexingDurationMs *int `json:"total_indexing_duration_ms,omitempty"`
	// TotalSearchDurationMs Total time spent performing ES searches as measured by Kibana; includes network latency and time spent serializing/deserializing request/response
	TotalSearchDurationMs *int `json:"total_search_duration_ms,omitempty"`
}

const (
	RuleSourceTypeInternal = "internal"
	RuleSourceTypeExternal = "external"
)

type SecurityDetectionsExternalRuleSource struct {
	// IsCustomized Determines whether an external/prebuilt rule has been customized by the user (i.e. any of its fields have been modified and diverged from the base value).
	IsCustomized bool   `json:"is_customized"`
	Type         string `json:"type"`
}

type SecurityDetectionsInternalRuleSource struct {
	Type string `json:"type"`
}

type SecurityDetectionsAlertSuppression struct {
	Duration *SecurityDetectionsAlertSuppressionDuration `json:"duration,omitempty"`
	GroupBy  []string                                    `json:"group_by"`

	// MissingFieldsStrategy Describes how alerts will be generated for documents with missing suppress by fields:
	// doNotSuppress - per each document a separate alert will be created
	// suppress - only alert will be created per suppress by bucket
	MissingFieldsStrategy *string `json:"missing_fields_strategy,omitempty"`
}

type SecurityDetectionsAlertSuppressionDuration struct {
	// Unit Time unit
	// Values are s, m, or h.
	Unit  string `json:"unit"`
	Value int    `json:"value"`
}

// SecurityDetectionsThreshold defines the threshold configuration for alerting.
//
// The Field field can be either a string or []string. If you specify an empty array ([]),
// alerts are generated when the query returns at least the number of results specified in the Value field.
//
// Available methods:
// - GetStringField(): Get Field as a string
// - GetStringSliceField(): Get Field as a string slice
// - SetStringField(value): Set Field to a string value
// - SetStringSliceField(values): Set Field to a string slice
// - IsFieldEmpty(): Check if Field is an empty array
// - NewThreshold(value): Create a new threshold with specified Value
//
// Example:
//
// threshold := NewThreshold(5)
// threshold.SetStringField("process.name") // For single field
//
//	or
//
// threshold.SetStringSliceField([]string{"process.name", "host.name"}) // For multiple fields
//
//	or for empty array case
//
// threshold.SetStringSliceField([]string{}) // Sets to []
type SecurityDetectionsThreshold struct {
	// Cardinality The field on which the cardinality is applied.
	Cardinality *[]SecurityDetectionsThresholdCardinality `json:"cardinality,omitempty"`

	// Field The field on which the threshold is applied.
	// If you specify an empty array ([]), alerts are generated when the query returns at least the number of results specified in the value field.
	// Use GetStringField(), GetStringSliceField(), SetStringField(), or SetStringSliceField() to access or modify this field.
	Field json.RawMessage `json:"field"`

	// Value The threshold value from which an alert is generated.
	Value int `json:"value"`
}

type SecurityDetectionsThresholdCardinality struct {
	// Field The field on which to calculate and compare the cardinality.
	Field string `json:"field"`

	// Value The threshold value from which an alert is generated based on unique number of values of cardinality.field.
	Value int `json:"value"`
}

type SecurityDetectionsThreatMapping struct {
	Entries []SecurityDetectionsThreatMappingEntry `json:"entries"`
}

type SecurityDetectionsThreatMappingEntry struct {
	// Field A string that does not contain only whitespace characters
	Field string `json:"field"`
	Type  string `json:"type"`

	// Value A string that does not contain only whitespace characters
	Value string `json:"value"`
}

type SecurityDetectionsBulkActionSummary struct {
	Failed    int `json:"failed"`
	Skipped   int `json:"skipped"`
	Succeeded int `json:"succeeded"`
	Total     int `json:"total"`
}

// To properly handle the response for Created, Deleted, and Updated use the UnmarshalRule function
// to convert the raw JSON into the appropriate rule type struct:
//
//	// Get update response
//	resp, _ := client.BulkActionRules(ctx, req)
//
//	// Unmarshal the response into the appropriate rule type
//	rule, _ := UnmarshalRule(resp.Body)
//
//	// Now you can use the rule with type assertions to access specific fields
//	switch r := rule.(type) {
//	case *SecurityDetectionsEQLRuleResponse:
//	    fmt.Println("Updated EQL rule:", r.Name)
//	case *SecurityDetectionsQueryRuleResponse:
//	    fmt.Println("Updated Query rule:", r.Name)
//	// Handle other rule types...
//	}
//	// Or access common fields directly
//	fmt.Println("Rule ID:", rule.GetCommonFields().ID)
//	fmt.Println("Updated at:", rule.GetCommonFields().UpdatedAt)
type SecurityDetectionsBulkActionResults struct {
	Created []json.RawMessage                         `json:"created"`
	Deleted []json.RawMessage                         `json:"deleted"`
	Skipped []SecurityDetectionsBulkActionResultsSkip `json:"skipped"`
	Updated []json.RawMessage                         `json:"updated"`
}

type SecurityDetectionsBulkActionResultsSkip struct {
	ID         string  `json:"id"`
	Name       *string `json:"name,omitempty"`
	SkipReason string  `json:"skip_reason"`
}

type SecurityDetectionsBulkActionErrors struct {
	Rules []SecurityDetectionsBulkActionErrorDetailsInError `json:"knowledgeBaseEntries"`
	// ErrCode Values are IMMUTABLE, PREBUILT_CUSTOMIZATION_LICENSE, MACHINE_LEARNING_AUTH,
	// MACHINE_LEARNING_INDEX_PATTERN, ESQL_INDEX_PATTERN, MANUAL_RULE_RUN_FEATURE, or MANUAL_RULE_RUN_DISABLED_RULE.
	ErrCode    *string `json:"err_code,omitempty"`
	Message    string  `json:"message"`
	StatusCode int     `json:"status_code"`
}

type SecurityDetectionsBulkActionErrorDetailsInError struct {
	ID   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

type SecurityDetectionsBulkActionRulesDelete struct {
	// Action Value is delete.
	Action string `json:"action"`
	// IDs Array of rule IDs. Array of rule IDs to which a bulk action will be applied.
	// Only valid when query property is undefined.
	IDs []string `json:"ids"`
	// Query Query to filter rules.
	Query *string `json:"query,omitempty"`
}

type SecurityDetectionsBulkActionRulesDisable struct {
	// Action Value is disable.
	Action string `json:"action"`
	// IDs Array of rule IDs. Array of rule IDs to which a bulk action will be applied.
	// Only valid when query property is undefined.
	IDs []string `json:"ids"`
	// Query Query to filter rules.
	Query *string `json:"query,omitempty"`
}

type SecurityDetectionsBulkActionRulesEnable struct {
	// Action Value is enable.
	Action string `json:"action"`
	// IDs Array of rule IDs. Array of rule IDs to which a bulk action will be applied.
	// Only valid when query property is undefined.
	IDs []string `json:"ids"`
	// Query Query to filter rules.
	Query *string `json:"query,omitempty"`
}

type SecurityDetectionsBulkActionRulesExport struct {
	// Action Value is export.
	Action string `json:"action"`
	// IDs Array of rule IDs. Array of rule IDs to which a bulk action will be applied.
	// Only valid when query property is undefined.
	IDs []string `json:"ids"`
	// Query Query to filter rules.
	Query *string `json:"query,omitempty"`
}

type SecurityDetectionsBulkActionRulesDuplicate struct {
	// Action Value is duplicate.
	Action    string                                           `json:"action"`
	Duplicate SecurityDetectionsBulkActionRulesDuplicateObject `json:"duplicate"`
	// IDs Array of rule IDs. Array of rule IDs to which a bulk action will be applied.
	// Only valid when query property is undefined.
	IDs []string `json:"ids"`
	// Query Query to filter rules.
	Query *string `json:"query,omitempty"`
}

type SecurityDetectionsBulkActionRulesDuplicateObject struct {
	// IncludeExceptions Whether to copy exceptions from the original rule
	IncludeExceptions bool `json:"include_exceptions"`
	// IncludeExpiredExceptions Whether to copy expired exceptions from the original rule
	IncludeExpiredExceptions bool `json:"include_expired_exceptions"`
}

type SecurityDetectionsBulkActionRulesRun struct {
	// Action Value is run.
	Action string `json:"action"`
	// IDs Array of rule IDs. Array of rule IDs to which a bulk action will be applied.
	// Only valid when query property is undefined.
	IDs []string `json:"ids"`
	// Query Query to filter rules.
	Query *string                                    `json:"query,omitempty"`
	Run   SecurityDetectionsBulkActionRulesRunObject `json:"run"`
}

type SecurityDetectionsBulkActionRulesRunObject struct {
	// EndDate End date of the manual rule run
	EndDate *string `json:"end_date,omitempty"`
	// StartDate Start date of the manual rule run
	StartDate string `json:"start_date"`
}

type SecurityDetectionsBulkActionRulesEdit struct {
	// Action Value is edit.
	Action string `json:"action"`
	Edit   []json.RawMessage
	// IDs Array of rule IDs. Array of rule IDs to which a bulk action will be applied.
	// Only valid when query property is undefined.
	IDs []string `json:"ids"`
	// Query Query to filter rules.
	Query *string                                    `json:"query,omitempty"`
	Run   SecurityDetectionsBulkActionRulesRunObject `json:"run"`
}

type SecurityDetectionsBulkActionRulesEditTags struct {
	// Type Values are add_tags, delete_tags, or set_tags.
	// - add_tags adds tags to rules. If a tag already exists for a rule, no changes are made.
	// - delete_tags removes tags from rules. If a tag does not exist for a rule, no changes are made.
	// - set_tags sets tags for rules, overwriting any existing tags.
	//   If the set of tags is the same as the existing tags, no changes are made.
	Type string `json:"type"`
	// Value String array containing words and phrases to help categorize, filter, and search rules.
	// Defaults to an empty array.
	Value []string `json:"value"`
}

type SecurityDetectionsBulkActionRulesEditIndexPatterns struct {
	OverwriteDataViews *bool `json:"overwrite_data_views"`
	// Type Values are add_index_patterns, delete_index_patterns, or set_index_patterns.
	// - add_index_patterns adds index patterns to rules.
	//   If an index pattern already exists for a rule, no changes are made.
	// - delete_index_patterns removes index patterns from rules.
	//   If an index pattern does not exist for a rule, no changes are made.
	// - set_index_patterns sets index patterns for rules, overwriting any existing index patterns.
	//   If the set of index patterns is the same as the existing index patterns, no changes are made.
	Type string `json:"type"`
	// Value Indices on which the rule functions.
	// Defaults to the Security Solution indices defined on the Kibana Advanced Settings page (Kibana → Stack Management → Advanced Settings → securitySolution:defaultIndex).
	// NOTE: This field is not supported for ES|QL rules.
	Value []string `json:"value"`
}

type SecurityDetectionsBulkActionRulesEditInvestigationFields struct {
	// Type Values are add_investigation_fields, delete_investigation_fields, or set_investigation_fields.
	// - add_investigation_fields adds investigation fields to rules.
	//   If an investigation field already exists for a rule, no changes are made.
	// - delete_investigation_fields removes investigation fields from rules.
	//   If an investigation field does not exist for a rule, no changes are made.
	// - set_investigation_fields sets investigation fields for rules.
	//   If the set of investigation fields is the same as the existing investigation fields, no changes are made.
	Type string `json:"type"`
	// Value Schema for fields relating to investigation fields.
	// These are user defined fields we use to highlight in various features in the UI such as alert details flyout
	// and exceptions auto-population from alert.
	Value SecurityDetectionsInvestigationFields `json:"value"`
}

type SecurityDetectionsBulkActionRulesEditTimeline struct {
	// Type Value is set_timeline.
	// - set_timeline sets a timeline for rules.
	//   If the same timeline already exists for a rule, no changes are made.
	Type  string                                         `json:"type"`
	Value SecurityDetectionsBulkActionRulesTimelineValue `json:"value"`
}

type SecurityDetectionsBulkActionRulesTimelineValue struct {
	// TimelineID Timeline template ID
	TimelineID string `json:"timeline_id"`
	// TimelineTitle Timeline template title
	TimelineTitle string `json:"timeline_title"`
}

type SecurityDetectionsBulkActionRulesEditSchedule struct {
	// Type Value is set_schedule.
	// - set_schedule sets a schedule for rules. If the same schedule already exists for a rule, no changes are made.
	Type  string                                             `json:"type"`
	Value SecurityDetectionsBulkActionRulesEditScheduleValue `json:"value"`
}

type SecurityDetectionsBulkActionRulesEditScheduleValue struct {
	// Interval Interval in which the rule runs. For example, "1h" means the rule runs every hour.
	// Format should match the following pattern: ^[1-9]\d*[smh]$.
	Interval string `json:"interval"`
	// Lookback Lookback time for the rules.
	// Additional look-back time that the rule analyzes.
	// For example, "10m" means the rule analyzes the last 10 minutes of data in addition to the frequency interval.
	// Format should match the following pattern: ^[1-9]\d*[smh]$.
	Lookback string `json:"lookback"`
}

type SecurityDetectionsBulkActionRulesEditActions struct {
	// Type Values are add_rule_actions or set_rule_actions.
	// - add_rule_actions adds rule actions to rules.
	//   This action is non-idempotent, meaning that even if the same rule action already exists for a rule,
	//   it will be added again with a new unique ID.
	// - set_rule_actions sets rule actions for rules.
	//   This action is non-idempotent, meaning that even if the same set of rule actions already exists for a rule,
	//   it will be set again and the actions will receive new unique IDs.
	Type  string                                            `json:"type"`
	Value SecurityDetectionsBulkActionRulesEditActionsValue `json:"value"`
}

type SecurityDetectionsBulkActionRulesEditActionsValue struct {
	Actions []SecurityDetectionsBulkActionRulesEditActionsItem `json:"actions"`
	// Throttle Defines the maximum interval in which a rule’s actions are executed.
	// Values are rule, 1h, 1d, or 7d.
	// NOTE: The rule level throttle field is deprecated in Elastic Security 8.8 and will remain active for at least the next 12 months.
	// In Elastic Security 8.8 and later, you can use the frequency field to define frequencies for individual actions.
	// Actions without frequencies will acquire a converted version of the rule’s throttle field.
	// In the response, the converted throttle setting appears in the individual actions' frequency field.
	Throttle string `json:"throttle,omitempty"`
}

type SecurityDetectionsBulkActionRulesEditActionsItem struct {
	// AlertsFilter Object containing an action’s conditional filters.
	// - `timeframe` (object, optional): Object containing the time frame for when this action can be run.
	//     - `days` (array of integers, required): List of days of the week on which this action will be run. Days of the week are expressed as numbers between `1-7`, where `1` is Monday and `7` is Sunday. To select all days of the week, enter an empty array.
	//     - `hours` (object, required): The hours of the day during which this action will run. Hours of the day are expressed as two strings in the format `hh:mm` in `24` hour time. A start of `00:00` and an end of `24:00` means the action can run all day.
	//         - start (string, required): Start time in `hh:mm` format.
	//         - end (string, required): End time in `hh:mm` format.
	//     - `timezone` (string, required): An ISO timezone name, such as `Europe/Madrid` or `America/New_York`. Specific offsets such as `UTC` or `UTC+1` will also work, but lack built-in DST.
	// - `query` (object, optional): Object containing a query filter which gets applied to an action and determines whether the action should run.
	//     - `kql` (string, required): A KQL string.
	//     - `filters` (array of objects, required): Array of filter objects, as defined in the `kbn-es-query` package.
	AlertsFilter *SecurityDetectionsRuleActionAlertsFilter `json:"alerts_filter,omitempty"`

	// Frequency The action frequency defines when the action runs (for example, only on rule execution or at specific time intervals).
	Frequency *SecurityDetectionsRuleActionFrequency `json:"frequency,omitempty"`

	// Group Optionally groups actions by use cases. Use `default` for alert notifications.
	Group *string `json:"group,omitempty"`

	// ID The connector ID.
	ID string `json:"id"`

	// Params Object containing the connector-specific parameters.
	// Use the appropriate Get/Set methods to access this field based on the action type:
	// - SetSlackParams() for Slack connectors
	// - SetEmailParams() for Email connectors
	// - SetWebhookParams() for Webhook connectors
	// - SetPagerDutyParams() for PagerDuty connectors
	Params json.RawMessage `json:"params"`
}

type SecurityDetectionsBulkActionEditResponse struct {
	RulesCount *int `json:"rules_count,omitempty"`
	Attributes struct {
		Errors  *[]SecurityDetectionsBulkActionErrors `json:"errors,omitempty"`
		Results SecurityDetectionsBulkActionResults   `json:"results"`
		Summary SecurityDetectionsBulkActionSummary   `json:"summary"`
	} `json:"attributes"`
	Message    *string `json:"message,omitempty"`
	StatusCode *int    `json:"status_code,omitempty"`
	Success    *bool   `json:"success,omitempty"`
}

type SecurityDetectionsBulkActionExportResponse string

type SecurityDetectionsSetAlertStatusRequestIDs struct {
	// SignalIDs List of alert ids.
	SignalIDs []string `json:"signal_ids"`
	// Status The status of an alert, which can be open, acknowledged, in-progress, or closed.
	Status string `json:"status"`
}

type SecurityDetectionsSetAlertStatusRequestQuery struct {
	// Conflicts Values are abort or proceed. Default value is abort.
	Conflicts *string `json:"conflicts,omitempty"`
	// Query The search definition using the Query DSL.
	Query types.Query `json:"query"`
	// Status The status of an alert, which can be open, acknowledged, in-progress, or closed.
	Status string `json:"status"`
}
