// Package kbapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package kbapi

import (
	"encoding/json"
	"time"
)

// SecurityEntityAnalyticsAPIAssetCriticalityBulkUploadErrorItem defines model for Security_Entity_Analytics_API_AssetCriticalityBulkUploadErrorItem.
type SecurityEntityAnalyticsAPIAssetCriticalityBulkUploadErrorItem struct {
	Index   int    `json:"index"`
	Message string `json:"message"`
}

// SecurityEntityAnalyticsAPIAssetCriticalityBulkUploadStats defines model for Security_Entity_Analytics_API_AssetCriticalityBulkUploadStats.
type SecurityEntityAnalyticsAPIAssetCriticalityBulkUploadStats struct {
	Failed     int `json:"failed"`
	Successful int `json:"successful"`
	Total      int `json:"total"`
}

// SecurityEntityAnalyticsAPIAssetCriticalityLevel The criticality level of the asset.
type SecurityEntityAnalyticsAPIAssetCriticalityLevel = string

// SecurityEntityAnalyticsAPIAssetCriticalityLevelsForBulkUpload The criticality level of the asset for bulk upload. The value `unassigned` is used to indicate that the criticality level is not assigned and is only used for bulk upload.
type SecurityEntityAnalyticsAPIAssetCriticalityLevelsForBulkUpload = string

// SecurityEntityAnalyticsAPIAssetCriticalityRecord defines model for Security_Entity_Analytics_API_AssetCriticalityRecord.
type SecurityEntityAnalyticsAPIAssetCriticalityRecord struct {
	// Timestamp The time the record was created or updated.
	Timestamp time.Time `json:"@timestamp"`
	Asset     struct {
		// Criticality The criticality level of the asset.
		Criticality *SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality,omitempty"`
	} `json:"asset"`

	// CriticalityLevel The criticality level of the asset.
	CriticalityLevel SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality_level"`
	Host             *struct {
		Asset *struct {
			// Criticality The criticality level of the asset.
			Criticality SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality"`
		} `json:"asset,omitempty"`
		Name string `json:"name"`
	} `json:"host,omitempty"`
	IdField SecurityEntityAnalyticsAPIIdField `json:"id_field"`

	// IdValue The ID value of the asset.
	IdValue string `json:"id_value"`
	Service *struct {
		Asset *struct {
			// Criticality The criticality level of the asset.
			Criticality SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality"`
		} `json:"asset,omitempty"`
		Name string `json:"name"`
	} `json:"service,omitempty"`
	User *struct {
		Asset *struct {
			// Criticality The criticality level of the asset.
			Criticality SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality"`
		} `json:"asset,omitempty"`
		Name string `json:"name"`
	} `json:"user,omitempty"`
}

// SecurityEntityAnalyticsAPIAssetCriticalityRecordEcsParts defines model for Security_Entity_Analytics_API_AssetCriticalityRecordEcsParts.
type SecurityEntityAnalyticsAPIAssetCriticalityRecordEcsParts struct {
	Asset struct {
		// Criticality The criticality level of the asset.
		Criticality *SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality,omitempty"`
	} `json:"asset"`
	Host *struct {
		Asset *struct {
			// Criticality The criticality level of the asset.
			Criticality SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality"`
		} `json:"asset,omitempty"`
		Name string `json:"name"`
	} `json:"host,omitempty"`
	Service *struct {
		Asset *struct {
			// Criticality The criticality level of the asset.
			Criticality SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality"`
		} `json:"asset,omitempty"`
		Name string `json:"name"`
	} `json:"service,omitempty"`
	User *struct {
		Asset *struct {
			// Criticality The criticality level of the asset.
			Criticality SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality"`
		} `json:"asset,omitempty"`
		Name string `json:"name"`
	} `json:"user,omitempty"`
}

// SecurityEntityAnalyticsAPIAssetCriticalityRecordIdParts defines model for Security_Entity_Analytics_API_AssetCriticalityRecordIdParts.
type SecurityEntityAnalyticsAPIAssetCriticalityRecordIdParts struct {
	IdField SecurityEntityAnalyticsAPIIdField `json:"id_field"`

	// IdValue The ID value of the asset.
	IdValue string `json:"id_value"`
}

// SecurityEntityAnalyticsAPICleanUpRiskEngineErrorResponse defines model for Security_Entity_Analytics_API_CleanUpRiskEngineErrorResponse.
type SecurityEntityAnalyticsAPICleanUpRiskEngineErrorResponse struct {
	CleanupSuccessful bool `json:"cleanup_successful"`
	Errors            []struct {
		Error string `json:"error"`
		Seq   int    `json:"seq"`
	} `json:"errors"`
}

// SecurityEntityAnalyticsAPICreateAssetCriticalityRecord defines model for Security_Entity_Analytics_API_CreateAssetCriticalityRecord.
type SecurityEntityAnalyticsAPICreateAssetCriticalityRecord struct {
	// CriticalityLevel The criticality level of the asset.
	CriticalityLevel SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality_level"`
	IdField          SecurityEntityAnalyticsAPIIdField               `json:"id_field"`

	// IdValue The ID value of the asset.
	IdValue string `json:"id_value"`
}

// SecurityEntityAnalyticsAPIEngineComponentResource defines model for Security_Entity_Analytics_API_EngineComponentResource.
type SecurityEntityAnalyticsAPIEngineComponentResource = string

// SecurityEntityAnalyticsAPIEngineComponentStatus defines model for Security_Entity_Analytics_API_EngineComponentStatus.
type SecurityEntityAnalyticsAPIEngineComponentStatus struct {
	Errors *[]struct {
		Message *string `json:"message,omitempty"`
		Title   *string `json:"title,omitempty"`
	} `json:"errors,omitempty"`
	Health    *string                                           `json:"health,omitempty"`
	Id        string                                            `json:"id"`
	Installed bool                                              `json:"installed"`
	Metadata  *SecurityEntityAnalyticsAPIMetadata               `json:"metadata,omitempty"`
	Resource  SecurityEntityAnalyticsAPIEngineComponentResource `json:"resource"`
}

// SecurityEntityAnalyticsAPIEngineDataviewUpdateResult defines model for Security_Entity_Analytics_API_EngineDataviewUpdateResult.
type SecurityEntityAnalyticsAPIEngineDataviewUpdateResult struct {
	Changes *struct {
		IndexPatterns *[]string `json:"indexPatterns,omitempty"`
	} `json:"changes,omitempty"`
	Type string `json:"type"`
}

// SecurityEntityAnalyticsAPIEngineDescriptor defines model for Security_Entity_Analytics_API_EngineDescriptor.
type SecurityEntityAnalyticsAPIEngineDescriptor struct {
	Delay              *string                                `json:"delay,omitempty"`
	DocsPerSecond      *int                                   `json:"docsPerSecond,omitempty"`
	Error              *map[string]interface{}                `json:"error,omitempty"`
	FieldHistoryLength int                                    `json:"fieldHistoryLength"`
	Filter             *string                                `json:"filter,omitempty"`
	Frequency          *string                                `json:"frequency,omitempty"`
	IndexPattern       SecurityEntityAnalyticsAPIIndexPattern `json:"indexPattern"`
	LookbackPeriod     *string                                `json:"lookbackPeriod,omitempty"`
	Status             SecurityEntityAnalyticsAPIEngineStatus `json:"status"`
	Timeout            *string                                `json:"timeout,omitempty"`
	TimestampField     *string                                `json:"timestampField,omitempty"`
	Type               SecurityEntityAnalyticsAPIEntityType   `json:"type"`
}

// SecurityEntityAnalyticsAPIEngineStatus defines model for Security_Entity_Analytics_API_EngineStatus.
type SecurityEntityAnalyticsAPIEngineStatus = string

// SecurityEntityAnalyticsAPIEntity defines model for Security_Entity_Analytics_API_Entity.
type SecurityEntityAnalyticsAPIEntity struct {
	union json.RawMessage
}

// SecurityEntityAnalyticsAPIEntityRiskLevels defines model for Security_Entity_Analytics_API_EntityRiskLevels.
type SecurityEntityAnalyticsAPIEntityRiskLevels = string

// SecurityEntityAnalyticsAPIEntityRiskScoreRecord defines model for Security_Entity_Analytics_API_EntityRiskScoreRecord.
type SecurityEntityAnalyticsAPIEntityRiskScoreRecord struct {
	// AtTimestamp The time at which the risk score was calculated.
	AtTimestamp     time.Time                                  `json:"atTimestamp"`
	CalculatedLevel SecurityEntityAnalyticsAPIEntityRiskLevels `json:"calculated_level"`

	// CalculatedScore The raw numeric value of the given entity's risk score.
	CalculatedScore float64 `json:"calculated_score"`

	// CalculatedScoreNorm The normalized numeric value of the given entity's risk score. Useful for comparing with other entities.
	CalculatedScoreNorm float64 `json:"calculated_score_norm"`

	// Category1Count The number of risk input documents that contributed to the Category 1 score (`category_1_score`).
	Category1Count float32 `json:"category_1_count"`

	// Category1Score The contribution of Category 1 to the overall risk score (`calculated_score`). Category 1 contains Detection Engine Alerts.
	Category1Score float64  `json:"category_1_score"`
	Category2Count *float32 `json:"category_2_count,omitempty"`
	Category2Score *float64 `json:"category_2_score,omitempty"`

	// CriticalityLevel The criticality level of the asset.
	CriticalityLevel    *SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality_level,omitempty"`
	CriticalityModifier *float64                                         `json:"criticality_modifier,omitempty"`

	// IdField The identifier field defining this risk score. Coupled with `id_value`, uniquely identifies the entity being scored.
	IdField string `json:"id_field"`

	// IdValue The identifier value defining this risk score. Coupled with `id_field`, uniquely identifies the entity being scored.
	IdValue string `json:"id_value"`

	// Inputs A list of the highest-risk documents contributing to this risk score. Useful for investigative purposes.
	Inputs []SecurityEntityAnalyticsAPIRiskScoreInput `json:"inputs"`
	Notes  []string                                   `json:"notes"`
}

// SecurityEntityAnalyticsAPIEntityType defines model for Security_Entity_Analytics_API_EntityType.
type SecurityEntityAnalyticsAPIEntityType = string

// SecurityEntityAnalyticsAPIHostEntity defines model for Security_Entity_Analytics_API_HostEntity.
type SecurityEntityAnalyticsAPIHostEntity struct {
	Asset *struct {
		// Criticality The criticality level of the asset.
		Criticality SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality"`
	} `json:"asset,omitempty"`
	AtTimestamp *time.Time `json:"atTimestamp,omitempty"`
	Entity      struct {
		Name   string `json:"name"`
		Source string `json:"source"`
	} `json:"entity"`
	Event *struct {
		Ingested *time.Time `json:"ingested,omitempty"`
	} `json:"event,omitempty"`
	Host struct {
		Architecture *[]string                                        `json:"architecture,omitempty"`
		Domain       *[]string                                        `json:"domain,omitempty"`
		Hostname     *[]string                                        `json:"hostname,omitempty"`
		Id           *[]string                                        `json:"id,omitempty"`
		Ip           *[]string                                        `json:"ip,omitempty"`
		Mac          *[]string                                        `json:"mac,omitempty"`
		Name         string                                           `json:"name"`
		Risk         *SecurityEntityAnalyticsAPIEntityRiskScoreRecord `json:"risk,omitempty"`
		Type         *[]string                                        `json:"type,omitempty"`
	} `json:"host"`
}

// SecurityEntityAnalyticsAPIIdField defines model for Security_Entity_Analytics_API_IdField.
type SecurityEntityAnalyticsAPIIdField = string

// SecurityEntityAnalyticsAPIIndexPattern defines model for Security_Entity_Analytics_API_IndexPattern.
type SecurityEntityAnalyticsAPIIndexPattern = string

// SecurityEntityAnalyticsAPIInspectQuery defines model for Security_Entity_Analytics_API_InspectQuery.
type SecurityEntityAnalyticsAPIInspectQuery struct {
	Dsl      []string `json:"dsl"`
	Response []string `json:"response"`
}

// SecurityEntityAnalyticsAPIInterval Interval in which enrich policy runs. For example, `"1h"` means the rule runs every hour. Must be less than or equal to half the duration of the lookback period,
type SecurityEntityAnalyticsAPIInterval = string

// SecurityEntityAnalyticsAPIMetadata defines model for Security_Entity_Analytics_API_Metadata.
type SecurityEntityAnalyticsAPIMetadata = SecurityEntityAnalyticsAPITransformStatsMetadata

// SecurityEntityAnalyticsAPIRiskEngineScheduleNowErrorResponse defines model for Security_Entity_Analytics_API_RiskEngineScheduleNowErrorResponse.
type SecurityEntityAnalyticsAPIRiskEngineScheduleNowErrorResponse struct {
	FullError string `json:"full_error"`
	Message   string `json:"message"`
}

// SecurityEntityAnalyticsAPIRiskEngineScheduleNowResponse defines model for Security_Entity_Analytics_API_RiskEngineScheduleNowResponse.
type SecurityEntityAnalyticsAPIRiskEngineScheduleNowResponse struct {
	Success *bool `json:"success,omitempty"`
}

// SecurityEntityAnalyticsAPIRiskScoreInput A generic representation of a document contributing to a Risk Score.
type SecurityEntityAnalyticsAPIRiskScoreInput struct {
	// Category The risk category of the risk input document.
	Category          string   `json:"category"`
	ContributionScore *float64 `json:"contribution_score,omitempty"`

	// Description A human-readable description of the risk input document.
	Description string `json:"description"`

	// Id The unique identifier (`_id`) of the original source document
	Id string `json:"id"`

	// Index The unique index (`_index`) of the original source document
	Index string `json:"index"`

	// RiskScore The weighted risk score of the risk input document.
	RiskScore *float64 `json:"risk_score,omitempty"`

	// Timestamp The @timestamp of the risk input document.
	Timestamp *string `json:"timestamp,omitempty"`
}

// SecurityEntityAnalyticsAPIServiceEntity defines model for Security_Entity_Analytics_API_ServiceEntity.
type SecurityEntityAnalyticsAPIServiceEntity struct {
	Asset *struct {
		// Criticality The criticality level of the asset.
		Criticality SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality"`
	} `json:"asset,omitempty"`
	AtTimestamp *time.Time `json:"atTimestamp,omitempty"`
	Entity      struct {
		Name   string `json:"name"`
		Source string `json:"source"`
	} `json:"entity"`
	Event *struct {
		Ingested *time.Time `json:"ingested,omitempty"`
	} `json:"event,omitempty"`
	Service struct {
		Name string                                           `json:"name"`
		Risk *SecurityEntityAnalyticsAPIEntityRiskScoreRecord `json:"risk,omitempty"`
	} `json:"service"`
}

// SecurityEntityAnalyticsAPIStoreStatus defines model for Security_Entity_Analytics_API_StoreStatus.
type SecurityEntityAnalyticsAPIStoreStatus = string

// SecurityEntityAnalyticsAPITaskManagerUnavailableResponse Task manager is unavailable
type SecurityEntityAnalyticsAPITaskManagerUnavailableResponse struct {
	Message    string `json:"message"`
	StatusCode int    `json:"status_code"`
}

// SecurityEntityAnalyticsAPITransformStatsMetadata defines model for Security_Entity_Analytics_API_TransformStatsMetadata.
type SecurityEntityAnalyticsAPITransformStatsMetadata struct {
	DeleteTimeInMs                     *int `json:"delete_time_in_ms,omitempty"`
	DocumentsDeleted                   *int `json:"documents_deleted,omitempty"`
	DocumentsIndexed                   int  `json:"documents_indexed"`
	DocumentsProcessed                 int  `json:"documents_processed"`
	ExponentialAvgCheckpointDurationMs int  `json:"exponential_avg_checkpoint_duration_ms"`
	ExponentialAvgDocumentsIndexed     int  `json:"exponential_avg_documents_indexed"`
	ExponentialAvgDocumentsProcessed   int  `json:"exponential_avg_documents_processed"`
	IndexFailures                      int  `json:"index_failures"`
	IndexTimeInMs                      int  `json:"index_time_in_ms"`
	IndexTotal                         int  `json:"index_total"`
	PagesProcessed                     int  `json:"pages_processed"`
	ProcessingTimeInMs                 int  `json:"processing_time_in_ms"`
	ProcessingTotal                    int  `json:"processing_total"`
	SearchFailures                     int  `json:"search_failures"`
	SearchTimeInMs                     int  `json:"search_time_in_ms"`
	SearchTotal                        int  `json:"search_total"`
	TriggerCount                       int  `json:"trigger_count"`
}

// SecurityEntityAnalyticsAPIUserEntity defines model for Security_Entity_Analytics_API_UserEntity.
type SecurityEntityAnalyticsAPIUserEntity struct {
	Asset *struct {
		// Criticality The criticality level of the asset.
		Criticality SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality"`
	} `json:"asset,omitempty"`
	AtTimestamp *time.Time `json:"atTimestamp,omitempty"`
	Entity      struct {
		Name   string `json:"name"`
		Source string `json:"source"`
	} `json:"entity"`
	Event *struct {
		Ingested *time.Time `json:"ingested,omitempty"`
	} `json:"event,omitempty"`
	User struct {
		Domain   *[]string                                        `json:"domain,omitempty"`
		Email    *[]string                                        `json:"email,omitempty"`
		FullName *[]string                                        `json:"full_name,omitempty"`
		Hash     *[]string                                        `json:"hash,omitempty"`
		Id       *[]string                                        `json:"id,omitempty"`
		Name     string                                           `json:"name"`
		Risk     *SecurityEntityAnalyticsAPIEntityRiskScoreRecord `json:"risk,omitempty"`
		Roles    *[]string                                        `json:"roles,omitempty"`
	} `json:"user"`
}

// DeleteAssetCriticalityRecordParams defines parameters for DeleteAssetCriticalityRecord.
type DeleteAssetCriticalityRecordParams struct {
	// IdValue The ID value of the asset.
	IdValue string `form:"id_value" json:"id_value"`

	// IdField The field representing the ID.
	IdField SecurityEntityAnalyticsAPIIdField `form:"id_field" json:"id_field"`

	// Refresh If 'wait_for' the request will wait for the index refresh.
	Refresh *string `form:"refresh,omitempty" json:"refresh,omitempty"`
}

// GetAssetCriticalityRecordParams defines parameters for GetAssetCriticalityRecord.
type GetAssetCriticalityRecordParams struct {
	// IdValue The ID value of the asset.
	IdValue string `form:"id_value" json:"id_value"`

	// IdField The field representing the ID.
	IdField SecurityEntityAnalyticsAPIIdField `form:"id_field" json:"id_field"`
}

// CreateAssetCriticalityRecordJSONBody defines parameters for CreateAssetCriticalityRecord.
type CreateAssetCriticalityRecordJSONBody struct {
	// CriticalityLevel The criticality level of the asset.
	CriticalityLevel SecurityEntityAnalyticsAPIAssetCriticalityLevel `json:"criticality_level"`
	IdField          SecurityEntityAnalyticsAPIIdField               `json:"id_field"`

	// IdValue The ID value of the asset.
	IdValue string `json:"id_value"`

	// Refresh If 'wait_for' the request will wait for the index refresh.
	Refresh *string `json:"refresh,omitempty"`
}

// BulkUpsertAssetCriticalityRecordsJSONBody defines parameters for BulkUpsertAssetCriticalityRecords.
type BulkUpsertAssetCriticalityRecordsJSONBody struct {
	Records []struct {
		// CriticalityLevel The criticality level of the asset for bulk upload. The value `unassigned` is used to indicate that the criticality level is not assigned and is only used for bulk upload.
		CriticalityLevel SecurityEntityAnalyticsAPIAssetCriticalityLevelsForBulkUpload `json:"criticality_level"`
		IdField          SecurityEntityAnalyticsAPIIdField                             `json:"id_field"`

		// IdValue The ID value of the asset.
		IdValue string `json:"id_value"`
	} `json:"records"`
}

// FindAssetCriticalityRecordsParams defines parameters for FindAssetCriticalityRecords.
type FindAssetCriticalityRecordsParams struct {
	// SortField The field to sort by.
	SortField *string `form:"sort_field,omitempty" json:"sort_field,omitempty"`

	// SortDirection The order to sort by.
	SortDirection *string `form:"sort_direction,omitempty" json:"sort_direction,omitempty"`

	// Page The page number to return.
	Page *int `form:"page,omitempty" json:"page,omitempty"`

	// PerPage The number of records to return per page.
	PerPage *int `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Kuery The kuery to filter by.
	Kuery *string `form:"kuery,omitempty" json:"kuery,omitempty"`
}

// InitEntityStoreJSONBody defines parameters for InitEntityStore.
type InitEntityStoreJSONBody struct {
	// Delay The delay before the transform will run.
	Delay *string `json:"delay,omitempty"`

	// DocsPerSecond The number of documents per second to process.
	DocsPerSecond *int `json:"docsPerSecond,omitempty"`

	// EnrichPolicyExecutionInterval Interval in which enrich policy runs. For example, `"1h"` means the rule runs every hour. Must be less than or equal to half the duration of the lookback period,
	EnrichPolicyExecutionInterval *SecurityEntityAnalyticsAPIInterval     `json:"enrichPolicyExecutionInterval,omitempty"`
	EntityTypes                   *[]SecurityEntityAnalyticsAPIEntityType `json:"entityTypes,omitempty"`

	// FieldHistoryLength The number of historical values to keep for each field.
	FieldHistoryLength *int    `json:"fieldHistoryLength,omitempty"`
	Filter             *string `json:"filter,omitempty"`

	// Frequency The frequency at which the transform will run.
	Frequency    *string                                 `json:"frequency,omitempty"`
	IndexPattern *SecurityEntityAnalyticsAPIIndexPattern `json:"indexPattern,omitempty"`

	// LookbackPeriod The amount of time the transform looks back to calculate the aggregations.
	LookbackPeriod *string `json:"lookbackPeriod,omitempty"`

	// Timeout The timeout for initializing the aggregating transform.
	Timeout *string `json:"timeout,omitempty"`

	// TimestampField The field to use as the timestamp.
	TimestampField *string `json:"timestampField,omitempty"`
}

// DeleteEntityEngineParams defines parameters for DeleteEntityEngine.
type DeleteEntityEngineParams struct {
	// Data Control flag to also delete the entity data.
	Data *bool `form:"data,omitempty" json:"data,omitempty"`
}

// InitEntityEngineJSONBody defines parameters for InitEntityEngine.
type InitEntityEngineJSONBody struct {
	// Delay The delay before the transform will run.
	Delay *string `json:"delay,omitempty"`

	// DocsPerSecond The number of documents per second to process.
	DocsPerSecond *int `json:"docsPerSecond,omitempty"`

	// EnrichPolicyExecutionInterval Interval in which enrich policy runs. For example, `"1h"` means the rule runs every hour. Must be less than or equal to half the duration of the lookback period,
	EnrichPolicyExecutionInterval *SecurityEntityAnalyticsAPIInterval `json:"enrichPolicyExecutionInterval,omitempty"`

	// FieldHistoryLength The number of historical values to keep for each field.
	FieldHistoryLength *int    `json:"fieldHistoryLength,omitempty"`
	Filter             *string `json:"filter,omitempty"`

	// Frequency The frequency at which the transform will run.
	Frequency    *string                                 `json:"frequency,omitempty"`
	IndexPattern *SecurityEntityAnalyticsAPIIndexPattern `json:"indexPattern,omitempty"`

	// LookbackPeriod The amount of time the transform looks back to calculate the aggregations.
	LookbackPeriod *string `json:"lookbackPeriod,omitempty"`

	// Timeout The timeout for initializing the aggregating transform.
	Timeout *string `json:"timeout,omitempty"`

	// TimestampField The field to use as the timestamp for the entity type.
	TimestampField *string `json:"timestampField,omitempty"`
}

// ListEntitiesParams defines parameters for ListEntities.
type ListEntitiesParams struct {
	SortField *string `form:"sort_field,omitempty" json:"sort_field,omitempty"`
	SortOrder *string `form:"sort_order,omitempty" json:"sort_order,omitempty"`
	Page      *int    `form:"page,omitempty" json:"page,omitempty"`
	PerPage   *int    `form:"per_page,omitempty" json:"per_page,omitempty"`

	// FilterQuery An ES query to filter by.
	FilterQuery *string                                `form:"filterQuery,omitempty" json:"filterQuery,omitempty"`
	EntityTypes []SecurityEntityAnalyticsAPIEntityType `form:"entity_types" json:"entity_types"`
}

// GetEntityStoreStatusParams defines parameters for GetEntityStoreStatus.
type GetEntityStoreStatusParams struct {
	// IncludeComponents If true returns a detailed status of the engine including all it's components
	IncludeComponents *bool `form:"include_components,omitempty" json:"include_components,omitempty"`
}

// ScheduleRiskEngineNowJSONBody defines parameters for ScheduleRiskEngineNow.
type ScheduleRiskEngineNowJSONBody interface{}

// CreateAssetCriticalityRecordJSONRequestBody defines body for CreateAssetCriticalityRecord for application/json ContentType.
type CreateAssetCriticalityRecordJSONRequestBody CreateAssetCriticalityRecordJSONBody

// BulkUpsertAssetCriticalityRecordsJSONRequestBody defines body for BulkUpsertAssetCriticalityRecords for application/json ContentType.
type BulkUpsertAssetCriticalityRecordsJSONRequestBody BulkUpsertAssetCriticalityRecordsJSONBody

// InitEntityStoreJSONRequestBody defines body for InitEntityStore for application/json ContentType.
type InitEntityStoreJSONRequestBody InitEntityStoreJSONBody

// InitEntityEngineJSONRequestBody defines body for InitEntityEngine for application/json ContentType.
type InitEntityEngineJSONRequestBody InitEntityEngineJSONBody

// ScheduleRiskEngineNowJSONRequestBody defines body for ScheduleRiskEngineNow for application/json ContentType.
type ScheduleRiskEngineNowJSONRequestBody ScheduleRiskEngineNowJSONBody

type DeleteAssetCriticalityRecordResponse struct {
	// Deleted True if the record was deleted or false if the record did not exist.
	Deleted bool                                              `json:"deleted"`
	Record  *SecurityEntityAnalyticsAPIAssetCriticalityRecord `json:"record,omitempty"`
}

type GetAssetCriticalityRecordResponse *SecurityEntityAnalyticsAPIAssetCriticalityRecord

type CreateAssetCriticalityRecordResponse *SecurityEntityAnalyticsAPIAssetCriticalityRecord

type BulkUpsertAssetCriticalityRecordsResponse struct {
	Errors []SecurityEntityAnalyticsAPIAssetCriticalityBulkUploadErrorItem `json:"errors"`
	Stats  SecurityEntityAnalyticsAPIAssetCriticalityBulkUploadStats       `json:"stats"`
}

type FindAssetCriticalityRecordsResponse struct {
	Page    int                                                `json:"page"`
	PerPage int                                                `json:"per_page"`
	Records []SecurityEntityAnalyticsAPIAssetCriticalityRecord `json:"records"`
	Total   int                                                `json:"total"`
}

type InitEntityStoreResponse struct {
	Engines   *[]SecurityEntityAnalyticsAPIEngineDescriptor `json:"engines,omitempty"`
	Succeeded *bool                                         `json:"succeeded,omitempty"`
}

type ListEntityEnginesResponse struct {
	Count   *int                                          `json:"count,omitempty"`
	Engines *[]SecurityEntityAnalyticsAPIEngineDescriptor `json:"engines,omitempty"`
}

type ApplyEntityEngineDataviewIndicesResponse struct {
	Result  *[]SecurityEntityAnalyticsAPIEngineDataviewUpdateResult `json:"result,omitempty"`
	Success *bool                                                   `json:"success,omitempty"`
}

type DeleteEntityEngineResponse struct {
	Deleted *bool `json:"deleted,omitempty"`
}

type GetEntityEngineResponse *SecurityEntityAnalyticsAPIEngineDescriptor

type InitEntityEngineResponse *SecurityEntityAnalyticsAPIEngineDescriptor

type StartEntityEngineResponse struct {
	Started *bool `json:"started,omitempty"`
}

type StopEntityEngineResponse struct {
	Stopped *bool `json:"stopped,omitempty"`
}

type ListEntitiesResponse struct {
	Inspect *SecurityEntityAnalyticsAPIInspectQuery `json:"inspect,omitempty"`
	Page    int                                     `json:"page"`
	PerPage int                                     `json:"per_page"`
	Records []SecurityEntityAnalyticsAPIEntity      `json:"records"`
	Total   int                                     `json:"total"`
}

type GetEntityStoreStatusResponse struct {
	Engines []struct {
		Components         *[]SecurityEntityAnalyticsAPIEngineComponentStatus `json:"components,omitempty"`
		Delay              *string                                            `json:"delay,omitempty"`
		DocsPerSecond      *int                                               `json:"docsPerSecond,omitempty"`
		Error              *map[string]interface{}                            `json:"error,omitempty"`
		FieldHistoryLength int                                                `json:"fieldHistoryLength"`
		Filter             *string                                            `json:"filter,omitempty"`
		Frequency          *string                                            `json:"frequency,omitempty"`
		IndexPattern       SecurityEntityAnalyticsAPIIndexPattern             `json:"indexPattern"`
		LookbackPeriod     *string                                            `json:"lookbackPeriod,omitempty"`
		Status             SecurityEntityAnalyticsAPIEngineStatus             `json:"status"`
		Timeout            *string                                            `json:"timeout,omitempty"`
		TimestampField     *string                                            `json:"timestampField,omitempty"`
		Type               SecurityEntityAnalyticsAPIEntityType               `json:"type"`
	} `json:"engines"`
	Status SecurityEntityAnalyticsAPIStoreStatus `json:"status"`
}

type CleanUpRiskEngineResponse struct {
	CleanupSuccessful *bool `json:"cleanup_successful,omitempty"`
}

type ScheduleRiskEngineNowResponse *SecurityEntityAnalyticsAPIRiskEngineScheduleNowResponse
